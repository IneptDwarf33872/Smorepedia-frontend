{"ast":null,"code":"import React,{useState}from'react';import'./PageNormal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const input=\"\\n{^Header 1^} = h2\\nHey im teddy and im writing a paragraph.Coolthings.\\n\\nCooltgihina.\\n\\n{Header 2} = h3\\nParagraph 2 line 1.\\nParagraph 2 line 2.\\n\\nParagraph 3.\\n\\n\";const infobox=[];//asidhashdhaohdlkh  \n//{History} \n//hkjagkdgkajsgdj\n//jdkljsahdjhakjd\nconst subsections=[];let numofobjects=0;const readInput=input1=>{//  let sections = [];\nlet currentHeader=\"\";let currentParagraph;let headerflag=true;let inHeader=false;let currentText=\"\";for(let i=0;i<input.length;i++){const char=input1[i];if(!inHeader){if(char===\"{\"){inHeader=true;subsections.push(/*#__PURE__*/_jsx(\"p\",{children:currentText}));currentHeader=\"\";currentText=\"\";}else if(i+1<input1.length&&char==='\\n'){subsections.push(/*#__PURE__*/_jsx(\"p\",{children:currentText}));subsections.push(/*#__PURE__*/_jsx(\"br\",{})//Someone shrink this god damn br\n);currentText=\"\";}else{currentText+=char;}}else{//reset header\nif(char===\"^\"){//{ followed by ^}\nheaderflag=false;}else if(char===\"}\"){inHeader=false;if(!(currentHeader.trim()===\"\")){if(!headerflag){headerflag=true;subsections.push(/*#__PURE__*/_jsx(\"h2\",{children:currentHeader},numofobjects));}else{subsections.push(/*#__PURE__*/ //add to subsections array\n_jsx(\"h3\",{children:currentHeader},numofobjects));}}}else{currentHeader+=char;//add char to header if not { or }\n}}}return subsections;};const result=readInput(input);console.log(result);function PageNormal(){return/*#__PURE__*/_jsx(\"div\",{className:\"All\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"button\",{children:\"Click Me\"}),subsections.map((element,index)=>/*#__PURE__*/_jsx(React.Fragment,{children:element},index))]})});}export default PageNormal;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","input","infobox","subsections","numofobjects","readInput","input1","currentHeader","currentParagraph","headerflag","inHeader","currentText","i","length","char","push","children","trim","result","console","log","PageNormal","className","map","element","index","Fragment"],"sources":["C:/Users/teddy/Desktop/VSCodeProjects/Smorepedia/smoresapp/src/pages/PageNormal.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './PageNormal.css'\r\n\r\nconst input = `\r\n{^Header 1^} = h2\r\nHey im teddy and im writing a paragraph.Coolthings.\r\n\r\nCooltgihina.\r\n\r\n{Header 2} = h3\r\nParagraph 2 line 1.\r\nParagraph 2 line 2.\r\n\r\nParagraph 3.\r\n\r\n`;\r\nconst infobox = [\r\n\r\n\r\n];\r\n//asidhashdhaohdlkh  \r\n//{History} \r\n//hkjagkdgkajsgdj\r\n//jdkljsahdjhakjd\r\nconst subsections = [\r\n\r\n\r\n];\r\nlet numofobjects = 0;\r\nconst readInput = (input1) => {\r\n  //  let sections = [];\r\n \r\n    let currentHeader = \"\";\r\n    let currentParagraph;\r\n    let headerflag = true;\r\n    let inHeader = false;\r\n    let currentText = \"\";\r\n    for (let i = 0; i < input.length; i++){\r\n        const char = input1[i];\r\n        if(!inHeader){\r\n            if (char === \"{\"){\r\n             inHeader = true;\r\n             subsections.push(\r\n                <p>\r\n                    {currentText}\r\n                </p>\r\n             );\r\n             \r\n            currentHeader = \"\";\r\n             currentText = \"\";\r\n            }else if(i + 1 < input1.length && char === '\\n'){\r\n                subsections.push(\r\n                    <p>\r\n                    {currentText}\r\n                    </p>\r\n                );\r\n                subsections.push(\r\n                    <br/>\r\n                    //Someone shrink this god damn br\r\n                );\r\n                currentText = \"\";\r\n            }else{\r\n\r\n                currentText += char;\r\n            }\r\n        }else{\r\n            //reset header\r\n            if (char === \"^\"){ //{ followed by ^}\r\n                headerflag = false;\r\n                \r\n            } else if (char === \"}\"){\r\n                inHeader = false;\r\n                if(!(currentHeader.trim() === \"\")){\r\n                    if(!headerflag){\r\n                        headerflag = true;\r\n                        subsections.push(\r\n                            <h2 key={numofobjects}> \r\n                            {currentHeader}\r\n                            </h2>\r\n                         )\r\n                    }else{\r\n                        subsections.push(              //add to subsections array\r\n                            <h3 key={numofobjects}>  \r\n                            {currentHeader}\r\n                            </h3>\r\n                        )\r\n                    }\r\n                }\r\n            } else {\r\n                currentHeader += char;             //add char to header if not { or }\r\n            }    \r\n        }\r\n    }\r\n    return subsections\r\n};\r\nconst result = readInput(input);\r\nconsole.log(result);\r\n\r\n\r\nfunction PageNormal() {\r\n    return (\r\n    <div className='All'>\r\n        <div className='content'>\r\n            <button >\r\n                Click Me\r\n            </button>\r\n        {subsections.map((element, index) => (\r\n        <React.Fragment key={index}>\r\n          {element}\r\n        </React.Fragment>\r\n      ))}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageNormal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}