{"ast":null,"code":"const express=require(\"express\");const bodyParser=require(\"body-parser\");const{Region}=require(\"oracle-nosqldb\");const{ServiceType}=require(\"oracle-nosqldb/lib/constants\");const NoSQLClient=require(\"oracle-nosqldb\").NoSQLClient;const app=express();app.use(bodyParser.json());const client=new NoSQLClient({region:Region.US_ASHBURN_1,serviceType:ServiceType.CLOUD,compartment:\"ocid1.compartment.oc1..aaaaaaaahaycpzfjgklhl4e7jic6xoufxxwwtxcylcl3fpsiooyycamd5igq\",auth:{iam:{tenantId:\"ocid1.tenancy.oc1..aaaaaaaabgpwfc7gq645lm7h6wjehohak2fd4xbedpvrmpplh3egjvjvnhgq\",userId:\"ocid1.user.oc1..aaaaaaaanamjf2u5sdw57hsuuvi4adbeotpigzolekzehywix3ilz6osb3yq\",fingerprint:\"9e:23:38:8a:5b:b6:c7:b5:16:b6:72:1a:a5:92:9f:75\",passphrase:\"\",privateKeyFile:\"./.oci/privateKey.pem\"}}});app.post('/add',async(req,res)=>{let{id,title,content,infobox}=req.body;console.log(id);try{const result=await client.put('pages',{id,title,content,infobox});console.log(result);res.json({result:result.success});if(!result.consumedCapacity){res.status(500).json({error:'Failed to add item'});}}catch(err){console.error('failed to insert data',err);res.status(500).json({error:err});}});app.get(\"/maxid\",async(req,res)=>{try{let result=await client.query('SELECT id FROM pages');result=result.rows;let highest=0;for(let i=0;i<result.length;i++){if(result[i].id>highest){highest=result[i].id;}}const jayson={high:highest};console.log(jayson.high);res.json(jayson);}catch(err){console.error(\"failed to get data\",err);res.status(500).json({error:err});}});app.get(\"/byid\",async(req,res)=>{try{let{id}=req.body;console.log(\"ID: \"+id);const result=await client.get('pages',{id});res.json(result.row);}catch(err){console.error(\"failed to get data\",err);res.status(500).json({error:err});}});app.delete('/byid',async(req,res)=>{const{id}=req.body;try{const result=await client.delete('pages',{id});res.json({result:result.success});}catch(err){console.error('failed to delete data',err);res.status(500).json({error:err});}});app.get(\"/\",async(req,res)=>{try{const result=await client.query('SELECT * FROM pages');res.json(result.rows);}catch(err){console.error(\"failed to get data\",err);res.status(500).json({error:err});}});app.get(\"/byprop\",async(req,res)=>{try{let{prop}=req.body;const result=await client.query(\"SELECT \".concat(prop,\" FROM pages\"));res.json(result.rows);}catch(err){console.error(\"failed to get data\",err);res.status(500).json({error:err});}});module.exports=app;","map":{"version":3,"names":["express","require","bodyParser","Region","ServiceType","NoSQLClient","app","use","json","client","region","US_ASHBURN_1","serviceType","CLOUD","compartment","auth","iam","tenantId","userId","fingerprint","passphrase","privateKeyFile","post","req","res","id","title","content","infobox","body","console","log","result","put","success","consumedCapacity","status","error","err","get","query","rows","highest","i","length","jayson","high","row","delete","prop","concat","module","exports"],"sources":["C:/Users/teddy/Desktop/VSCodeProjects/Smorepedia/smoresapp/src/server.js"],"sourcesContent":["const express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst { Region } = require(\"oracle-nosqldb\");\r\nconst { ServiceType } = require(\"oracle-nosqldb/lib/constants\");\r\nconst NoSQLClient = require(\"oracle-nosqldb\").NoSQLClient;\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\nconst client = new NoSQLClient({\r\n  region: Region.US_ASHBURN_1,\r\n  serviceType: ServiceType.CLOUD,\r\n  compartment:\r\n\"ocid1.compartment.oc1..aaaaaaaahaycpzfjgklhl4e7jic6xoufxxwwtxcylcl3fpsiooyycamd5igq\",\r\n  auth: {\r\n    iam: {\r\n      tenantId:      \"ocid1.tenancy.oc1..aaaaaaaabgpwfc7gq645lm7h6wjehohak2fd4xbedpvrmpplh3egjvjvnhgq\",\r\n      userId:\r\n\"ocid1.user.oc1..aaaaaaaanamjf2u5sdw57hsuuvi4adbeotpigzolekzehywix3ilz6osb3yq\",\r\n      fingerprint: \"9e:23:38:8a:5b:b6:c7:b5:16:b6:72:1a:a5:92:9f:75\",\r\n      passphrase: \"\",\r\n      privateKeyFile: \"./.oci/privateKey.pem\",\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\napp.post('/add', async (req, res) => {\r\n    let { id, title, content, infobox } = req.body;\r\n    console.log(id);\r\n    try {\r\n        const result = await client.put('pages', {\r\n            id,\r\n            title,\r\n            content,\r\n            infobox,\r\n        });\r\n        console.log(result);\r\n        res.json({ result: result.success});\r\n      if (!result.consumedCapacity) {\r\n          res.status(500).json({ error: 'Failed to add item' });\r\n      }\r\n    } catch (err) {\r\n        console.error('failed to insert data', err);\r\n        res.status(500).json({ error: err });\r\n    }\r\n});\r\n\r\n\r\n\r\napp.get(\"/maxid\", async (req, res) => {\r\n  try {\r\n    let result = await client.query('SELECT id FROM pages');\r\n    result = result.rows;\r\n    let highest = 0;\r\n    for(let i = 0; i < result.length; i++){\r\n      if(result[i].id > highest){\r\n        highest = result[i].id;\r\n      }\r\n    }\r\n    const jayson = { high: highest };\r\n    console.log(jayson.high);\r\n    res.json(jayson);\r\n  } catch (err) {\r\n    console.error(\"failed to get data\", err);\r\n    res.status(500).json({ error: err });\r\n  }\r\n});\r\n\r\napp.get(\"/byid\", async (req, res) => {\r\n  try {\r\n    let { id } = req.body;\r\n    console.log(\"ID: \" + id);\r\n    const result = await client.get('pages', { id })\r\n    res.json(result.row);\r\n  } catch (err) {\r\n    console.error(\"failed to get data\", err);\r\n    res.status(500).json({ error: err });\r\n  }\r\n});\r\napp.delete('/byid', async (req, res) => {\r\n    const { id } = req.body;\r\n    \r\n    try {\r\n        const result = await client.delete('pages', { id });\r\n        res.json({ result: result.success});\r\n    } catch (err) {\r\n        console.error('failed to delete data', err);\r\n        res.status(500).json({ error: err });\r\n    }\r\n});\r\napp.get(\"/\", async (req, res) => {\r\n  try {\r\n    const result = await client.query('SELECT * FROM pages');\r\n    res.json(result.rows);\r\n  } catch (err) {\r\n    console.error(\"failed to get data\", err);\r\n    res.status(500).json({ error: err });\r\n  }\r\n});\r\napp.get(\"/byprop\", async (req, res) => {\r\n    try {\r\n        let { prop } = req.body;\r\n      const result = await client.query(`SELECT ${prop} FROM pages`);\r\n      res.json(result.rows);\r\n    } catch (err) {\r\n      console.error(\"failed to get data\", err);\r\n      res.status(500).json({ error: err });\r\n    }\r\n  });\r\n\r\n\r\nmodule.exports = app;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}