{"ast":null,"code":"/*-\n * Copyright (c) 2018, 2024 Oracle and/or its affiliates. All rights reserved.\n *\n * Licensed under the Universal Permissive License v 1.0 as shown at\n *  https://oss.oracle.com/licenses/upl/\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst fs = require('fs');\nconst readline = require('readline');\nconst NoSQLArgumentError = require('./error').NoSQLArgumentError;\n\n//Test if integer is 32 bit signed integer.\nfunction isInt32(n) {\n  return (n & 0xFFFFFFFF) == n;\n}\nfunction isPosInt(val) {\n  return Number.isSafeInteger(val) && val > 0;\n}\nfunction isPosIntOrZero(val) {\n  return Number.isSafeInteger(val) && val >= 0;\n}\nfunction isPosInt32(val) {\n  return isPosInt(val) && isInt32(val);\n}\nfunction isPosInt32OrZero(val) {\n  return isPosIntOrZero(val) && isInt32(val);\n}\nfunction isPlainObject(val) {\n  if (val == null || typeof val !== 'object') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(val);\n  return proto === Object.prototype || !proto;\n}\nfunction promisified(context, method, ...args) {\n  return new Promise((resolve, reject) => {\n    method.call(context, ...args, (err, res) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve(res);\n    });\n  });\n}\nfunction mapToObj(map) {\n  const obj = {};\n  for (let [key, val] of map) {\n    assert(typeof key === 'string');\n    obj[key] = val;\n  }\n  return obj;\n}\n\n//Server seems to send the timestamp in the ISO format, but without\n//the ending 'Z', so we add it here.  This may need more work if different\n//formats are used.\nfunction stringToUTCDate(s) {\n  if (!s.endsWith('Z')) {\n    s += 'Z';\n  }\n  return new Date(s);\n}\n\n//Nested property by string\nfunction propertyByString(obj, prop) {\n  if (!prop) {\n    return obj;\n  }\n  prop = prop.split('.');\n  let val = obj;\n  for (let p of prop) {\n    if (val == null) {\n      return val; //null or undefined\n    }\n    val = val[p];\n  }\n  return val;\n}\n\n//One-liner to clear multiple data\nfunction clearData(...args) {\n  for (let arg of args) {\n    if (Buffer.isBuffer(arg) || Array.isArray(arg)) {\n      arg.fill(0);\n    } else if (arg && typeof arg === 'object') {\n      clearData(...Object.values(arg));\n    }\n  }\n}\n\n//asynchronous sleep\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nfunction _processProfileLine(line, callback) {\n  line = line.trim();\n  if (!line.length || line[0] === '#') {\n    return;\n  }\n  if (line[0] === '[' && line[line.length - 1] === ']') {\n    line = line.substring(1, line.length - 1);\n    if (this.profile == null && line === this.profileName) {\n      this.profile = {};\n    } else if (this.profile != null) {\n      //finished reading the profile, don't need to read the rest\n      this.finished = true;\n      callback();\n    }\n    return;\n  }\n  if (this.profile == null || this.finished) {\n    return;\n  }\n  let i = line.indexOf('=');\n  if (i == -1) {\n    return callback(new NoSQLArgumentError(`Invalid line in config \\\nfile ${this.configFile} (no key-value): ${line}`));\n  }\n  const key = line.substring(0, i).trim();\n  if (!key.length) {\n    return callback(new NoSQLArgumentError(`Invalid line in config \\\nfile ${this.configFile} (empty key): ${line}`));\n  }\n  this.profile[key] = line.substring(i + 1).trim();\n}\nfunction _readProfile(configFile, profileName, callback) {\n  const input = fs.createReadStream(configFile).on('error', err => callback(err));\n  const ri = readline.createInterface({\n    input\n  });\n  const ctx = {\n    profileName,\n    _processProfileLine\n  };\n  ri.on('line', line => ctx._processProfileLine(line, err => {\n    if (err) {\n      return callback(err);\n    }\n    ri.close();\n    //we are not interested in any more events\n    ri.removeAllListeners();\n    //ri.close() will relinguish the stream so we need to\n    //destroy it explicitly\n    input.destroy();\n  }));\n  ri.on('close', () => {\n    callback(null, ctx.profile);\n  });\n  ri.on('error', err => callback(err));\n}\n\n//read section of an ini file\nfunction readProfile(configFile, profileName) {\n  return promisified(null, _readProfile, configFile, profileName);\n}\nfunction readProfileSync(configFile, profileName) {\n  let data = fs.readFileSync(configFile, 'utf8');\n  const ctx = {\n    profileName,\n    _processProfileLine\n  };\n  data = data.split(/\\r\\n|\\r|\\n/);\n  for (let line of data) {\n    ctx._processProfileLine(line, err => {\n      if (err) {\n        throw err;\n      }\n    });\n    if (ctx.finished) {\n      break;\n    }\n  }\n  return ctx.profile;\n}\n\n//Use hasOwnProperty(obj, prop) instead of obj.hasOwnProperty(prop)\n//because plain obj could be created with no prototype\nconst hasOwnProperty = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n//Require function that will not be parsed by Webpack.  This is used to avoid\n//Webpack compilation errors for cases where require is passed a variable.\n//None of those required modules are currently used in browser environment, if\n//any are in future, they would have to be added separately to Webpack config.\nconst requireNoWP = typeof __webpack_require__ === 'function' ?\n// eslint-disable-next-line no-undef\n__webpack_require__ : require;\nfunction isChildTable(tableName) {\n  assert(typeof tableName === 'string');\n  return tableName.indexOf('.') >= 0;\n}\nfunction topTableName(tableName) {\n  assert(typeof tableName === 'string');\n  const idx = tableName.indexOf('.');\n  return idx < 0 ? tableName : tableName.slice(0, idx);\n}\n\n//Uses built-in comparsion to return integer result.\n//The arguments are assumed to be the same type, except we allow comparisons\n//between number and bigint (hence using == instead of === below).\nfunction compare(val1, val2) {\n  return val1 > val2 ? 1 : val1 == val2 ? 0 : -1;\n}\n\n//Sort map or object entries by key. If ents is an array, returns ents sorted\n//in place, otherwise converts ents to array and returns the sorted array.\nfunction sortMapEntries(ents) {\n  if (!Array.isArray(ents)) {\n    ents = Array.from(ents);\n  }\n  return ents.sort((a, b) => compare(a[0], b[0]));\n}\n\n//Shallow object replace. In addition assigning properties from the source, it\n//ensures the properties not in source will not exist in the target. Returns\n//the target.\nfunction replaceObject(dst, src) {\n  for (const prop of Object.getOwnPropertyNames(dst)) {\n    if (!(prop in src)) {\n      delete dst[prop];\n    }\n  }\n  return Object.assign(dst, src);\n}\nmodule.exports = {\n  isInt32,\n  isPosInt,\n  isPosIntOrZero,\n  isPosInt32,\n  isPosInt32OrZero,\n  isPlainObject,\n  promisified,\n  mapToObj,\n  stringToUTCDate,\n  propertyByString,\n  clearData,\n  sleep,\n  readProfile,\n  readProfileSync,\n  hasOwnProperty,\n  requireNoWP,\n  isChildTable,\n  topTableName,\n  compare,\n  sortMapEntries,\n  replaceObject\n};","map":{"version":3,"names":["assert","require","fs","readline","NoSQLArgumentError","isInt32","n","isPosInt","val","Number","isSafeInteger","isPosIntOrZero","isPosInt32","isPosInt32OrZero","isPlainObject","proto","Object","getPrototypeOf","prototype","promisified","context","method","args","Promise","resolve","reject","call","err","res","mapToObj","map","obj","key","stringToUTCDate","s","endsWith","Date","propertyByString","prop","split","p","clearData","arg","Buffer","isBuffer","Array","isArray","fill","values","sleep","ms","setTimeout","_processProfileLine","line","callback","trim","length","substring","profile","profileName","finished","i","indexOf","configFile","_readProfile","input","createReadStream","on","ri","createInterface","ctx","close","removeAllListeners","destroy","readProfile","readProfileSync","data","readFileSync","hasOwnProperty","Function","bind","requireNoWP","__webpack_require__","isChildTable","tableName","topTableName","idx","slice","compare","val1","val2","sortMapEntries","ents","from","sort","a","b","replaceObject","dst","src","getOwnPropertyNames","assign","module","exports"],"sources":["C:/Users/teddy/Desktop/VSCodeProjects/Smorepedia/smoresapp/node_modules/oracle-nosqldb/lib/utils.js"],"sourcesContent":["/*-\n * Copyright (c) 2018, 2024 Oracle and/or its affiliates. All rights reserved.\n *\n * Licensed under the Universal Permissive License v 1.0 as shown at\n *  https://oss.oracle.com/licenses/upl/\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst fs = require('fs');\nconst readline = require('readline');\nconst NoSQLArgumentError = require('./error').NoSQLArgumentError;\n\n//Test if integer is 32 bit signed integer.\nfunction isInt32(n) {\n    return (n & 0xFFFFFFFF) == n;\n}\n\nfunction isPosInt(val) {\n    return Number.isSafeInteger(val) && val > 0;\n}\n\nfunction isPosIntOrZero(val) {\n    return Number.isSafeInteger(val) && val >= 0;\n}\n\nfunction isPosInt32(val) {\n    return isPosInt(val) && isInt32(val);\n}\n\nfunction isPosInt32OrZero(val) {\n    return isPosIntOrZero(val) && isInt32(val);\n}\n\nfunction isPlainObject(val) {\n    if (val == null || typeof val !== 'object') {\n        return false;\n    }\n    const proto = Object.getPrototypeOf(val);\n    return proto === Object.prototype || !proto;\n}\n\nfunction promisified(context, method, ...args) {\n    return new Promise((resolve, reject) => {\n        method.call(context, ...args, (err, res) => {\n            if (err) {\n                return reject(err);\n            }\n            return resolve(res);\n        });\n    });\n}\n\nfunction mapToObj(map) {\n    const obj = {};\n    for(let [key, val] of map) {\n        assert(typeof key === 'string');\n        obj[key] = val;\n    }\n    return obj;\n}\n\n//Server seems to send the timestamp in the ISO format, but without\n//the ending 'Z', so we add it here.  This may need more work if different\n//formats are used.\nfunction stringToUTCDate(s) {\n    if (!s.endsWith('Z')) {\n        s += 'Z';\n    }\n    return new Date(s);\n}\n\n//Nested property by string\nfunction propertyByString(obj, prop) {\n    if (!prop) {\n        return obj;\n    }\n    prop = prop.split('.');\n    let val = obj;\n    for(let p of prop) {        \n        if (val == null) {\n            return val; //null or undefined\n        }\n        val = val[p];\n    }\n    return val;\n}\n\n//One-liner to clear multiple data\nfunction clearData(...args) {\n    for(let arg of args) {\n        if (Buffer.isBuffer(arg) || Array.isArray(arg)) {\n            arg.fill(0);\n        } else if (arg && typeof arg === 'object') {\n            clearData(...Object.values(arg));\n        }\n    }\n}\n\n//asynchronous sleep\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction _processProfileLine(line, callback) {\n    line = line.trim();\n    if (!line.length || line[0] === '#') {\n        return;\n    }\n    if (line[0] === '[' && line[line.length - 1] === ']') {\n        line = line.substring(1, line.length - 1);\n        if (this.profile == null && line === this.profileName) {\n            this.profile = {};\n        } else if (this.profile != null) {\n            //finished reading the profile, don't need to read the rest\n            this.finished = true;\n            callback();\n        }\n        return;\n    }\n    if (this.profile == null || this.finished) {\n        return;\n    }\n    let i = line.indexOf('=');\n    if (i == -1) {\n        return callback(new NoSQLArgumentError(`Invalid line in config \\\nfile ${this.configFile} (no key-value): ${line}`));\n    }\n    const key = line.substring(0, i).trim();\n    if (!key.length) {\n        return callback(new NoSQLArgumentError(`Invalid line in config \\\nfile ${this.configFile} (empty key): ${line}`));\n    }\n    this.profile[key] = line.substring(i + 1).trim();\n}\n\nfunction _readProfile(configFile, profileName, callback) {\n    const input = fs.createReadStream(configFile).on('error',\n        err => callback(err));\n    const ri = readline.createInterface({ input });\n    const ctx = {\n        profileName,\n        _processProfileLine\n    };\n    ri.on('line', line => ctx._processProfileLine(line, err => {\n        if (err) {\n            return callback(err);\n        }\n        ri.close();\n        //we are not interested in any more events\n        ri.removeAllListeners();\n        //ri.close() will relinguish the stream so we need to\n        //destroy it explicitly\n        input.destroy();\n    }));\n    ri.on('close', () => { callback(null, ctx.profile); });\n    ri.on('error', err => callback(err));\n}\n\n//read section of an ini file\nfunction readProfile(configFile, profileName) {\n    return promisified(null, _readProfile, configFile, profileName);\n}\n\nfunction readProfileSync(configFile, profileName) {\n    let data = fs.readFileSync(configFile, 'utf8');\n    const ctx = {\n        profileName,\n        _processProfileLine\n    };\n    data = data.split(/\\r\\n|\\r|\\n/);\n    for(let line of data) {\n        ctx._processProfileLine(line, (err) => {\n            if (err) {\n                throw err;\n            }\n        });\n        if (ctx.finished) {\n            break;\n        }\n    }\n    return ctx.profile;\n}\n\n//Use hasOwnProperty(obj, prop) instead of obj.hasOwnProperty(prop)\n//because plain obj could be created with no prototype\nconst hasOwnProperty = Function.prototype.call.bind(\n    Object.prototype.hasOwnProperty);\n\n//Require function that will not be parsed by Webpack.  This is used to avoid\n//Webpack compilation errors for cases where require is passed a variable.\n//None of those required modules are currently used in browser environment, if\n//any are in future, they would have to be added separately to Webpack config.\nconst requireNoWP = typeof __webpack_require__ === 'function' ?\n    // eslint-disable-next-line no-undef\n    __webpack_require__ : require;\n\nfunction isChildTable(tableName) {\n    assert(typeof tableName === 'string');\n    return tableName.indexOf('.') >= 0;\n}\n\nfunction topTableName(tableName) {\n    assert(typeof tableName === 'string');\n    const idx = tableName.indexOf('.');\n    return idx < 0 ? tableName : tableName.slice(0, idx);\n}\n\n//Uses built-in comparsion to return integer result.\n//The arguments are assumed to be the same type, except we allow comparisons\n//between number and bigint (hence using == instead of === below).\nfunction compare(val1, val2) {\n    return val1 > val2 ? 1 : (val1 == val2 ? 0 : -1);\n}\n\n//Sort map or object entries by key. If ents is an array, returns ents sorted\n//in place, otherwise converts ents to array and returns the sorted array.\nfunction sortMapEntries(ents) {\n    if (!Array.isArray(ents)) {\n        ents = Array.from(ents);\n    }\n    return ents.sort((a, b) => compare(a[0], b[0]));\n}\n\n//Shallow object replace. In addition assigning properties from the source, it\n//ensures the properties not in source will not exist in the target. Returns\n//the target.\nfunction replaceObject(dst, src) {\n    for(const prop of Object.getOwnPropertyNames(dst)) {\n        if (!(prop in src)) {\n            delete dst[prop];\n        }\n    }\n    return Object.assign(dst, src);\n}\n\nmodule.exports = {\n    isInt32,\n    isPosInt,\n    isPosIntOrZero,\n    isPosInt32,\n    isPosInt32OrZero,\n    isPlainObject,\n    promisified,\n    mapToObj,\n    stringToUTCDate,\n    propertyByString,\n    clearData,\n    sleep,\n    readProfile,\n    readProfileSync,\n    hasOwnProperty,\n    requireNoWP,\n    isChildTable,\n    topTableName,\n    compare,\n    sortMapEntries,\n    replaceObject\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}