{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teddy\\\\Desktop\\\\VSCodeProjects\\\\Smorepedia\\\\smoresapp\\\\src\\\\components\\\\Topbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Logo from '../assets/smorelogo.png';\nimport './Topbar.css';\nimport { query } from '../middleware';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst results = [];\nconst titles = query('/byprop', {\n  prop: 'title'\n});\nconst pages = [];\nfor (let index in titles) {\n  pages.push(titles[index]);\n}\nconst curateResults = soFar => {\n  console.log(\"Made it\" + soFar);\n  results.length = 0;\n  let count = 0;\n  for (let i = 0; i < pages.length; i++) {\n    if (pages[i].substring(0, soFar.length) === soFar) {\n      results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pages[i]\n      }, count, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this));\n      count++;\n    }\n    if (count === 5) {\n      break;\n    }\n  }\n};\nfunction Topbar() {\n  _s();\n  const [userInBar, setUserInBar] = useState(false);\n  const [searchVal, setSearchVal] = useState('');\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    setSearchVal(newValue);\n    if (searchVal.length === 0) {\n      results.length = 0;\n      console.log('len to 0');\n    }\n    console.log(newValue);\n    curateResults(newValue);\n  };\n  const onBarFocus = () => {\n    if (searchVal === '') {\n      curateResults('');\n    }\n    setUserInBar(true);\n  };\n  const onBarDefocus = () => {\n    setUserInBar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Topbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo,\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"logofont\",\n        children: \"S'morepedia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-bar\",\n          type: \"search\",\n          placeholder: \"Search S'morepedia\",\n          onFocus: onBarFocus,\n          onBlur: onBarDefocus,\n          value: searchVal,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        style: {\n          display: userInBar ? 'flex' : 'none'\n        },\n        children: results.map((element, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: element\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Topbar, \"o3cPsvOF8fTTf2kBzoF/2qQqSUI=\");\n_c = Topbar;\nexport default Topbar;\nvar _c;\n$RefreshReg$(_c, \"Topbar\");","map":{"version":3,"names":["React","useState","Logo","query","jsxDEV","_jsxDEV","results","titles","prop","pages","index","push","curateResults","soFar","console","log","length","count","i","substring","children","fileName","_jsxFileName","lineNumber","columnNumber","Topbar","_s","userInBar","setUserInBar","searchVal","setSearchVal","handleInputChange","event","newValue","target","value","onBarFocus","onBarDefocus","className","src","type","placeholder","onFocus","onBlur","onChange","style","display","map","element","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/teddy/Desktop/VSCodeProjects/Smorepedia/smoresapp/src/components/Topbar.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport Logo from '../assets/smorelogo.png'\r\nimport './Topbar.css'\r\nimport {query} from '../middleware'\r\n\r\nconst results = [\r\n\r\n]\r\nconst titles = query('/byprop', {prop: 'title'});\r\nconst pages = [];\r\nfor(let index in titles){\r\n    pages.push(titles[index]);\r\n}\r\n\r\nconst curateResults = (soFar) => {\r\n    console.log(\"Made it\" + soFar)\r\n    results.length = 0;\r\n    let count = 0;\r\n    for(let i = 0; i < pages.length; i++){\r\n        if(pages[i].substring(0, soFar.length) === soFar){\r\n            results.push(\r\n                <div key={count}>\r\n                    {pages[i]}\r\n                </div>\r\n            )\r\n            count++;\r\n        }\r\n        if(count === 5){\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Topbar() {\r\n    const [userInBar, setUserInBar] = useState(false);\r\n    const [searchVal, setSearchVal] = useState('')\r\n    const handleInputChange = (event) =>{\r\n        const newValue = event.target.value;\r\n        setSearchVal(newValue);\r\n        if(searchVal.length === 0){\r\n            results.length = 0;\r\n            console.log('len to 0')\r\n        }\r\n        console.log(newValue)\r\n        curateResults(newValue);\r\n    }\r\n    const onBarFocus = () => {\r\n        if(searchVal === ''){\r\n            curateResults('')\r\n        }\r\n        setUserInBar(true)\r\n    }\r\n    const onBarDefocus = () => {\r\n        setUserInBar(false)\r\n    }\r\n  return (\r\n    <div className='Topbar'>\r\n        <div className='left'>\r\n            <img src={Logo} className='logo'/>\r\n            <header className='logofont'>S'morepedia</header>  \r\n        </div>\r\n        <div className='right'> \r\n            <form className = \"search-box\">\r\n                <input\r\n                className='search-bar'\r\n                type = \"search\" \r\n                placeholder = \"Search S'morepedia\" \r\n                onFocus={onBarFocus}\r\n                onBlur={onBarDefocus}\r\n                value={searchVal}\r\n                onChange={handleInputChange}\r\n                />\r\n            </form>\r\n            <div className='results' style={{display: userInBar ? 'flex': 'none'}}>\r\n                {results.map((element, index) => (\r\n                    <React.Fragment key={index}>\r\n                        {element}\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Topbar\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}